{"version":3,"sources":["../../app-es6/dao/NegociacaoDao.js"],"names":["NegociacaoDao","connection","_connection","_store","negociacao","Promise","resolve","reject","request","transaction","objectStore","add","onsuccess","onerror","console","log","e","target","error","cursor","openCursor","negociacoes","atual","result","dado","value","push","Negociacao","_data","_quantidade","_valor","continue","clear"],"mappings":";;;;;;IAAMA,a;AAEJ,yBAAYC,UAAZ,EAAwB;AAAA;;AACtB,SAAKC,WAAL,GAAmBD,UAAnB;AACA,SAAKE,MAAL,GAAc,aAAd;AACD;;;;6BAEQC,U,EAAY;AAAA;;AACnB,aAAO,IAAIC,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;;AAEtC,YAAIC,UAAU,MAAKN,WAAL,CACXO,WADW,CACC,CAAC,MAAKN,MAAN,CADD,EACgB,WADhB,EAEXO,WAFW,CAEC,MAAKP,MAFN,EAGXQ,GAHW,CAGPP,UAHO,CAAd;;AAKEI,gBAAQI,SAAR,GAAoB,aAAK;;AAEvBN;AACD,SAHD;AAIAE,gBAAQK,OAAR,GAAkB,aAAK;;AAErBC,kBAAQC,GAAR,CAAYC,EAAEC,MAAF,CAASC,KAArB;AACAX,iBAAO,yCAAP;AACD,SAJD;AAKH,OAhBM,CAAP;AAiBD;;;iCAEY;AAAA;;AAEX,aAAO,IAAIF,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;;AAEtC,YAAIY,SAAS,OAAKjB,WAAL,CACVO,WADU,CACE,CAAC,OAAKN,MAAN,CADF,EACiB,WADjB,EAEVO,WAFU,CAEE,OAAKP,MAFP,EAGViB,UAHU,EAAb;;AAKE,YAAIC,cAAc,EAAlB;;AAEAF,eAAOP,SAAP,GAAmB,aAAK;;AAEtB,cAAIU,QAAQN,EAAEC,MAAF,CAASM,MAArB;;AAEA,cAAID,KAAJ,EAAW;;AAET,gBAAIE,OAAOF,MAAMG,KAAjB;;AAEAJ,wBAAYK,IAAZ,CAAiB,IAAIC,UAAJ,CAAeH,KAAKI,KAApB,EAA2BJ,KAAKK,WAAhC,EAA6CL,KAAKM,MAAlD,CAAjB;;AAEAR,kBAAMS,QAAN;AAED,WARD,MAQO;;AAELzB,oBAAQe,WAAR;AACD;AAEF,SAjBD;;AAmBAF,eAAON,OAAP,GAAiB,aAAK;;AAEpBC,kBAAQC,GAAR,CAAYC,EAAEC,MAAF,CAASC,KAArB;AACAX,iBAAO,wCAAP;AACD,SAJD;AAKH,OAjCM,CAAP;AAkCD;;;iCAEY;AAAA;;AACX,aAAO,IAAIF,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;;AAEtC,YAAIC,UAAU,OAAKN,WAAL,CACXO,WADW,CACC,CAAC,OAAKN,MAAN,CADD,EACgB,WADhB,EAEXO,WAFW,CAEC,OAAKP,MAFN,EAGX6B,KAHW,EAAd;;AAKAxB,gBAAQI,SAAR,GAAoB;AAAA,iBAAKN,QAAQ,kCAAR,CAAL;AAAA,SAApB;;AAEAE,gBAAQK,OAAR,GAAkB,aAAK;AACrBC,kBAAQC,GAAR,CAAYC,EAAEC,MAAF,CAASC,KAArB;AACAX,iBAAO,yCAAP;AAED,SAJD;AAKD,OAdM,CAAP;AAeD","file":"NegociacaoDao.js","sourcesContent":["class NegociacaoDao {\r\n\r\n  constructor(connection) {\r\n    this._connection = connection;\r\n    this._store = 'negociacoes';\r\n  }\r\n\r\n  adiciona(negociacao) { \r\n    return new Promise((resolve, reject) => {\r\n\r\n      let request = this._connection\r\n        .transaction([this._store], 'readwrite')\r\n        .objectStore(this._store)\r\n        .add(negociacao);\r\n\r\n        request.onsuccess = e => {\r\n\r\n          resolve()\r\n        };\r\n        request.onerror = e => {\r\n\r\n          console.log(e.target.error);\r\n          reject('Não foi possível adicionar a negociação')\r\n        }\r\n    });\r\n  }\r\n\r\n  listaTodos() {\r\n\r\n    return new Promise((resolve, reject) => {\r\n\r\n      let cursor = this._connection\r\n        .transaction([this._store], 'readwrite')\r\n        .objectStore(this._store)\r\n        .openCursor();\r\n\r\n        let negociacoes = [];\r\n\r\n        cursor.onsuccess = e => {\r\n\r\n          let atual = e.target.result;\r\n\r\n          if (atual) {\r\n\r\n            let dado = atual.value;\r\n\r\n            negociacoes.push(new Negociacao(dado._data, dado._quantidade, dado._valor));\r\n\r\n            atual.continue();\r\n\r\n          } else {\r\n\r\n            resolve(negociacoes);\r\n          }\r\n\r\n        };\r\n\r\n        cursor.onerror = e => {\r\n\r\n          console.log(e.target.error);\r\n          reject('Não foi possível listar as negociações')\r\n        };\r\n    })\r\n  }\r\n\r\n  apagaTodos() {\r\n    return new Promise((resolve, reject) => {\r\n\r\n      let request = this._connection\r\n        .transaction([this._store], 'readwrite')\r\n        .objectStore(this._store)\r\n        .clear();\r\n\r\n      request.onsuccess = e => resolve('Negociações apagadas com sucesso');\r\n\r\n      request.onerror = e => {\r\n        console.log(e.target.error);\r\n        reject('Não foi possível remover as negociações');\r\n\r\n      }\r\n    });\r\n  }\r\n}"]}